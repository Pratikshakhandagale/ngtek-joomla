{"version":3,"sources":["ng://user-login/lib/user-login.service.ts","ng://user-login/lib/user-login.component.ts","ng://user-login/lib/providers/sociallogin.service.ts","ng://user-login/lib/components/sociallogin/sociallogin.component.ts","ng://user-login/lib/providers/login.service.ts","ng://user-login/lib/components/login/login.component.ts","ng://user-login/lib/user-login.module.ts"],"names":["UserLoginService","Injectable","args","providedIn","UserLoginComponent","prototype","ngOnInit","Component","selector","template","SocialloginService","init","siteUrl","baseUrl","logout","localStorage","removeItem","this","currentUserSubject","next","doSocialLogin","accessToken","provider","_this","headers","append","userData","access_token","Promise","resolve","http","post","socialloginApi","subscribe","res","setItem","JSON","stringify","alert","HttpClient","HttpHeaders","BehaviorSubject","parse","getItem","currentUser","asObservable","SocialloginComponent","socialloginService","authService","authState","user","loggedIn","signInWithGoogle","signIn","GoogleLoginProvider","PROVIDER_ID","then","authToken","signInUserData","emit","navUrl","router","navigate","signInWithFB","FacebookLoginProvider","signOut","AuthService","Router","Input","Output","EventEmitter","LoginService","login","username","password","formData","FormData","loginApi","pipe","map","auth","id","getCurrentUser","value","isLoggedIn","X-Auth","LoginComponent","loginForm","formBuilder","group","Validators","required","Object","defineProperty","controls","doLogin","loginService","f","loginUserData","getSocialSignInUserData","data","console","log","FormBuilder","ɵ1","config","AuthServiceConfig","ɵ0","provideConfig","UserLoginModule","NgModule","declarations","imports","FormsModule","ReactiveFormsModule","HttpClientModule","SocialLoginModule","exports","providers","provide","useFactory","schemas","NO_ERRORS_SCHEMA"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngtek-joomla-login',\n  templateUrl: './user-login.component.html',\n\n  styles: []\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialloginService {\n  socialloginApi: string = '/index.php?option=com_api&app=users&resource=jfbconnect';\n  baseUrl: '';\n  headers: any;\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders();\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n\n  }\n\n  public init(siteUrl) {\n    this.baseUrl = siteUrl;\n    return this;\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n  \n  doSocialLogin(accessToken, provider) {\n    let payloaddata = '&access_token=' + accessToken + '&provider=' + provider;\n\n    this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    this.headers.append('Access-Control-Allow-Origin', '*');\n\n    let userData =\n    {\n      'access_token': accessToken,\n      'provider': provider\n    }\n\n    return new Promise(resolve => { \n       this.http.post(this.baseUrl + this.socialloginApi, userData, { headers: this.headers })\n        .subscribe(res => {\n          localStorage.setItem('currentUser', JSON.stringify(res['data']));\n          this.currentUserSubject.next(res['data']);\n          resolve(res);\n          alert(' Login Successfully');\n        });\n    });\n  }\n}\n","\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\nimport { AuthService, SocialUser } from 'angularx-social-login';\nimport { SocialloginService } from '../../providers/sociallogin.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-joomla-sociallogin',\n  templateUrl: './sociallogin.component.html',\n  styleUrls: ['./sociallogin.component.scss']\n})\n\nexport class SocialloginComponent implements OnInit {\n  @Input() facebook: boolean;\n  @Input() google: boolean;\n  @Input() siteUrl : string;\n  @Output() signInUserData = new EventEmitter();\n  @Input() navUrl: string;\n\n  loggedIn: any;\n  constructor(private authService: AuthService,\n    private socialloginService: SocialloginService, \n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.socialloginService.init(this.siteUrl);\n    this.authService.authState.subscribe((user) => {\n      this.loggedIn = (user != null);\n    });\n  }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(res => {\n      this.socialloginService.doSocialLogin(res.authToken, res.provider).then(res => {\n        this.signInUserData.emit(res);\n        if(this.navUrl)\n      {\n        this.router.navigate(['/' + this.navUrl]);\n      }else{\n        this.signInUserData.emit(res);\n      }\n      });\n    });\n  }\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID).then(res => {\n      this.socialloginService.doSocialLogin(res.authToken, res.provider).then(res => {\n        this.signInUserData.emit(res);\n      });\n    });\n  }\n\n  signOut(): void {\n    this.socialloginService.logout();\n    this.authService.signOut().then(res => {\n      alert('Successfully signOut');\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  loginApi: string = '/index.php?option=com_api&app=users&resource=login';\n  baseUrl: '';\n  headers: any;\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders({ 'X-Auth': 'login' });\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public init(siteUrl) {\n    this.baseUrl = siteUrl;\n    return this;\n  }\n\n  public login(username, password) {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    return this.http.post(\n     this.baseUrl + this.loginApi,\n      formData,\n      { headers: this.headers }).pipe(map(user => {\n        if (!user['err_code'] && (user['data'].auth || user['data'].id)) {\n          localStorage.setItem('currentUser', JSON.stringify(user['data']));\n          this.currentUserSubject.next(user['data']);\n        }\n        return user['data'];\n      }));\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  public getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n\n  public isLoggedIn() {\n    let user = this.getCurrentUser();\n\n    return user.auth ? true : false;\n  }\n\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\n//import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n//Service\nimport { LoginService } from '../../providers/login.service'\n\n\n@Component({\n  selector: 'app-joomla-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  @Input() siteUrl: string;\n  @Input() sociallogin: boolean;\n  @Input() facebook: boolean;\n  @Input() google: boolean;\n  @Input() navUrl: string;\n  @Output() loginUserData = new EventEmitter();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  public doLogin() {\n    this.loginService.init(this.siteUrl);\n    this.loginService.login(this.f.username.value, this.f.password.value).subscribe((res) => {\n      if(this.navUrl)\n      {\n        this.router.navigate(['/' + this.navUrl]);\n      }else{\n        this.loginUserData.emit(res);\n      }\n    });\n  }\n\n  getSocialSignInUserData(data) {\n    console.log('getFBSignInUserData - ', data);\n  }\n}\n\n","import { NgModule , NO_ERRORS_SCHEMA} from '@angular/core';\nimport { UserLoginComponent } from './user-login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n//Componenets\nimport { SocialloginComponent } from './components/sociallogin/sociallogin.component'\nimport{ LoginComponent} from './components/login/login.component'\n\n//Providers\nimport { LoginService } from './providers/login.service'\n\n//Social login third party module\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\n \nlet googleClientId = '1005635293950-29g89s87fm0dvj3540rsufta0oguts1l.apps.googleusercontent.com';\nlet fbAppId = '2037079629930934';\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(googleClientId)\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider(fbAppId)\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n \n\n@NgModule({\n  declarations: [\n    UserLoginComponent,\n    LoginComponent,\n    SocialloginComponent\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n      ReactiveFormsModule,\n      SocialLoginModule\n      //MDBBootstrapModule.forRoot(),\n  ],\n  exports: [\n    UserLoginComponent,\n    LoginComponent,\n    SocialloginComponent,\n    //MDBBootstrapModule\n\n  ],\n  providers: [\n    LoginService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n\n})\nexport class UserLoginModule { }\n"]}