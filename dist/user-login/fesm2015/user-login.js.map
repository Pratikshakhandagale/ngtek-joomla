{"version":3,"file":"user-login.js.map","sources":["ng://user-login/lib/user-login.service.ts","ng://user-login/lib/user-login.component.ts","ng://user-login/lib/providers/sociallogin.service.ts","ng://user-login/lib/components/sociallogin/sociallogin.component.ts","ng://user-login/lib/providers/login.service.ts","ng://user-login/lib/components/login/login.component.ts","ng://user-login/lib/user-login.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngtek-joomla-login',\n  templateUrl: './user-login.component.html',\n\n  styles: []\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialloginService {\n  socialloginApi: string = '/index.php?option=com_api&app=users&resource=jfbconnect';\n  baseUrl: '';\n  headers: any;\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders();\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n\n  }\n\n  public init(siteUrl) {\n    this.baseUrl = siteUrl;\n    return this;\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n  \n  doSocialLogin(accessToken, provider) {\n    let payloaddata = '&access_token=' + accessToken + '&provider=' + provider;\n\n    this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    this.headers.append('Access-Control-Allow-Origin', '*');\n\n    let userData =\n    {\n      'access_token': accessToken,\n      'provider': provider\n    }\n\n    return new Promise(resolve => { \n       this.http.post(this.baseUrl + this.socialloginApi, userData, { headers: this.headers })\n        .subscribe(res => {\n          localStorage.setItem('currentUser', JSON.stringify(res['data']));\n          this.currentUserSubject.next(res['data']);\n          resolve(res);\n          alert(' Login Successfully');\n        });\n    });\n  }\n}\n","\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\nimport { AuthService, SocialUser } from 'angularx-social-login';\nimport { SocialloginService } from '../../providers/sociallogin.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-joomla-sociallogin',\n  templateUrl: './sociallogin.component.html',\n  styleUrls: ['./sociallogin.component.scss']\n})\n\nexport class SocialloginComponent implements OnInit {\n  @Input() facebook: boolean;\n  @Input() google: boolean;\n  @Input() siteUrl : string;\n  @Output() signInUserData = new EventEmitter();\n  @Input() navUrl: string;\n\n  loggedIn: any;\n  constructor(private authService: AuthService,\n    private socialloginService: SocialloginService, \n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.socialloginService.init(this.siteUrl);\n    this.authService.authState.subscribe((user) => {\n      this.loggedIn = (user != null);\n    });\n  }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(res => {\n      this.socialloginService.doSocialLogin(res.authToken, res.provider).then(res => {\n        this.signInUserData.emit(res);\n        if(this.navUrl)\n      {\n        this.router.navigate(['/' + this.navUrl]);\n      }else{\n        this.signInUserData.emit(res);\n      }\n      });\n    });\n  }\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID).then(res => {\n      this.socialloginService.doSocialLogin(res.authToken, res.provider).then(res => {\n        this.signInUserData.emit(res);\n      });\n    });\n  }\n\n  signOut(): void {\n    this.socialloginService.logout();\n    this.authService.signOut().then(res => {\n      alert('Successfully signOut');\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  loginApi: string = '/index.php?option=com_api&app=users&resource=login';\n  baseUrl: '';\n  headers: any;\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders({ 'X-Auth': 'login' });\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public init(siteUrl) {\n    this.baseUrl = siteUrl;\n    return this;\n  }\n\n  public login(username, password) {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    return this.http.post(\n     this.baseUrl + this.loginApi,\n      formData,\n      { headers: this.headers }).pipe(map(user => {\n        if (!user['err_code'] && (user['data'].auth || user['data'].id)) {\n          localStorage.setItem('currentUser', JSON.stringify(user['data']));\n          this.currentUserSubject.next(user['data']);\n        }\n        return user['data'];\n      }));\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  public getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n\n  public isLoggedIn() {\n    let user = this.getCurrentUser();\n\n    return user.auth ? true : false;\n  }\n\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\n//import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n//Service\nimport { LoginService } from '../../providers/login.service'\n\n\n@Component({\n  selector: 'app-joomla-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  @Input() siteUrl: string;\n  @Input() sociallogin: boolean;\n  @Input() facebook: boolean;\n  @Input() google: boolean;\n  @Input() navUrl: string;\n  @Output() loginUserData = new EventEmitter();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  public doLogin() {\n    this.loginService.init(this.siteUrl);\n    this.loginService.login(this.f.username.value, this.f.password.value).subscribe((res) => {\n      if(this.navUrl)\n      {\n        this.router.navigate(['/' + this.navUrl]);\n      }else{\n        this.loginUserData.emit(res);\n      }\n    });\n  }\n\n  getSocialSignInUserData(data) {\n    console.log('getFBSignInUserData - ', data);\n  }\n}\n\n","import { NgModule , NO_ERRORS_SCHEMA} from '@angular/core';\nimport { UserLoginComponent } from './user-login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n//Componenets\nimport { SocialloginComponent } from './components/sociallogin/sociallogin.component'\nimport{ LoginComponent} from './components/login/login.component'\n\n//Providers\nimport { LoginService } from './providers/login.service'\n\n//Social login third party module\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\n \nlet googleClientId = '1005635293950-29g89s87fm0dvj3540rsufta0oguts1l.apps.googleusercontent.com';\nlet fbAppId = '2037079629930934';\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(googleClientId)\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider(fbAppId)\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n \n\n@NgModule({\n  declarations: [\n    UserLoginComponent,\n    LoginComponent,\n    SocialloginComponent\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n      ReactiveFormsModule,\n      SocialLoginModule\n      //MDBBootstrapModule.forRoot(),\n  ],\n  exports: [\n    UserLoginComponent,\n    LoginComponent,\n    SocialloginComponent,\n    //MDBBootstrapModule\n\n  ],\n  providers: [\n    LoginService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n\n})\nexport class UserLoginModule { }\n"],"names":[],"mappings":"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"}
